import ol from 'ol-all';

import loader from './loader';


class TMap extends ol.Map {
    constructor() {
        super({
            controls: [],
            interactions: []
        });
        this.currentMode = null;
    }

    async init(target) {
        await loader.load(this);
        this.setTarget(target);
        this.defaultMode();
    }

    setMode(name, cursor = null, interactions = null) {
        if (name === this.currentMode)
            return;

        if (!name) {
            cursor = 'default';
            interactions = [
                new ol.interaction.DragPan(),
                new ol.interaction.PinchZoom(),
                new ol.interaction.MouseWheelZoom(),
            ]
        }

        this.getInteractions().clear();
        for (let int of interactions)
            this.addInteraction(int);

        this.getTargetElement().style.cursor = cursor;
        this.currentMode = name;
    }

    defaultMode() {
        this.setMode('');
    }

    getLayerById(uid) {
        let found = null;

        function _walk(layer) {
            if (found)
                return;

            if (ol.getUid(layer) === uid) {
                found = layer;
                return;
            }

            if (layer.getLayers) {
                layer.getLayers().forEach(sub => _walk(sub));
            }
        }

        _walk(this.getLayerGroup());
        return found;
    }
}

export default TMap;
