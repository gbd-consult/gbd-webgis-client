import React from 'react';
import IconButton from 'material-ui/IconButton';
import Paper from 'material-ui/Paper';

import app from '../app';
import MaterialIcon from './MaterialIcon';

class ToolbarButton extends React.Component {
    style() {
        let th = app.theme().gbd.ui.toolbar;
        let s = {
            marginTop: app.theme().gbd.ui.gutter,
            marginLeft: app.theme().gbd.ui.gutter,
            borderRadius: '50%',
            padding: 0,
            width: th.button.size,
            height: th.button.size,
            boxShadow: th.button.shadow
        };

        let key = (this.props.secondary ? 'secondary' : 'primary');

        if (this.props.active)
            key += 'Active';

        s.color = th.button[key + 'Color'];
        s.backgroundColor = th.button[key + 'Background'];

        let bc = th.button.borderColor,
            bw = th.button.borderWidth;

        if (bw) {
            s.borderWidth = bw;
            s.borderColor = bc;
            s.borderStyle = 'solid';
        }

        return s;
    }

    render() {
        let s = this.style(),
            icon = null;

        if (this.props.icon)  {
            icon = <MaterialIcon color={s.color} icon={this.props.icon} />;
        } else {
            icon = React.Children.map(this.props.children, child => {
                return React.cloneElement(child, { color : s.color });
            });
        }

        return (
            <IconButton
                style={s}
                tooltip={this.props.tooltip}
                tooltipPosition='top-left'
                onClick={this.props.onClick}
            >
                {icon}
            </IconButton>
        );
    }
}

export default ToolbarButton;
