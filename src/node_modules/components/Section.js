import React from 'react';

import FontIcon from 'material-ui/FontIcon';
import IconButton from 'material-ui/IconButton';

import app from 'app';

class Button extends React.Component {
    render() {
        return (
            <IconButton
                style={this.props.style}
                iconStyle={this.props.iconStyle}
                onClick={this.props.onClick}
            >
                <FontIcon className='material-icons'>{this.props.icon}</FontIcon>
            </IconButton>
        );
    }
}

class Header extends React.Component {
    render() {
        return (
            <div style={app.theme('gwc.ui.section.rowBox')}>

                <div style={app.theme('gwc.ui.section.buttonBox')}>
                    {this.props.toggleable && <Button
                        style={app.theme('gwc.ui.section.toggle' + (this.props.open ? 'Open' : ''))}
                        iconStyle={app.theme('gwc.ui.section.toggleIcon')}
                        open={this.props.open}
                        icon={'keyboard_arrow_right'}
                        onClick={this.props.toggleClick}
                    />}
                </div>

                <div style={app.theme('gwc.ui.section.contentBox')}>
                    <div style={{flex: 1}}>
                         {this.props.content}
                    </div>

                    {this.props.icon && <div style={app.theme('gwc.ui.section.buttonBox')}>
                        <Button
                            style={app.theme('gwc.ui.section.button')}
                            iconStyle={app.theme('gwc.ui.section.buttonIcon')}
                            icon={this.props.icon}
                            onClick={this.props.iconClick}
                        />
                    </div>}
                </div>
            </div>
        );
    }
}

export default class Section extends React.Component {
    constructor(props) {
        super(props);
        this.state = {open: ('open' in props) ? props.open : true};
    }

    toggleClick() {
        let fn = this.props.toggleClick || (() => null);
        this.setState({open: !this.state.open}, () => fn(this.state.open));
    }

    render() {
        let indent = this.props.indent ?
            app.theme('gwc.ui.section.indent') : 0;

        return (
            <div>
                <Header
                    content={this.props.header}
                    icon={this.props.icon}
                    iconClick={this.props.iconClick}
                    toggleable={!!this.props.children}
                    open={this.state.open}
                    toggleClick={() => this.toggleClick()}
                />

                {this.state.open && <div style={{marginLeft: indent}}>
                    {this.props.children}
                </div>}
            </div>
        )
    }
}