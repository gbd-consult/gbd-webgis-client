/**
 * @module app/config
 */
let _conf = {};


function init(obj) {
    _conf = Object.assign({}, obj);
}

function _get(key) {
    let val = _conf;
    for (let p of key.split('.')) {
        if (!(p in val))
            return null;
        val = val[p];
    }
    return val;
}


/**
 *
 * @param {string} key
 * @returns {string|null}
 *
 * @desc
 *
 * Returns a string under this key.
 *
 */
function str(key) {
    let v = _get(key);
    return v === null ? null : String(v);
}

/**
 *
 * @param {string} key
 * @returns {number|null}
 *
 * @desc
 *
 * Returns a number under this key.
 *
 */
function number(key) {
    let v = _get(key);
    return v === null || isNaN(v) ? null : Number(v);
}

/**
 *
 * @param {string} key
 * @returns {object|null}
 *
 * @desc
 *
 * Returns an object under this key.
 *
 */
function object(key) {
    let v = _get(key);
    return v;
}

export default { init, str, number, object };